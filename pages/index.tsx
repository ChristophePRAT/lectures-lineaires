import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useState, useEffect } from 'react'
import { useQuill } from "react-quilljs"
import RowComponent from '../components/RowComponent'
import { supabase } from '../utils/supabaseClient'
import Auth from '../components/Auth'
import Account from '../components/Account'

const Home: NextPage = () => {
  const { quill, quillRef } = useQuill();
  const [data, setData] = useState<any>();

  //const [session, setSession] = useState<any>(null)

  //useEffect(() => {
  //setSession(supabase.auth.session())

  //supabase.auth.onAuthStateChange((_event, session) => {
  //setSession(session)
  //})
  //}, [])
  const getData = async () => {
    const { data: LectureLineaire, error } = await supabase
    .from("LectureLineaire")
    .select()

    if (error) {
      console.log(error)
    } else {
      console.log(LectureLineaire)
      setData(LectureLineaire)
    }
  }

  useEffect(() => {
    getData()
  }, [])

  useEffect(() => {
    if (quill) {
      quill.on("text-change", (delta, oldDelta, source) => {
        console.log("Text change!");
        console.log(quill.root.innerHTML); // Get innerHTML using quill
      });
    }
  }, [quill]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {/*
          *<div style={{ width: "600px", height: "300px" }}>
          *  <div ref={quillRef} />
          *</div>
          */}
        {/*
          *{!session ? <Auth /> : <Account key={session.user.id} session={session} />}
          */}
        <div className="flex flex-row justify-between flex-nowrap">
          <RowComponent
            title="Test"
            extract="sq<b>d</b>fuiqs"
            videoLink="youtube.com/watch?v=319fd82"
            introduction="qsdfqs"
            explanation="sqdfsd"
          />
          <RowComponent
            title="Test"
            extract="sq<b>d</b>fuiqs<br /> <br /> <br /> fqsd"
            videoLink="youtube.com/watch?v=319fd82"
            introduction="qsdfqs"
            explanation="sqdfsd"
          />
          {
            // map data and display RowComponent with key
            data &&
              data.map((item: any) => {
              return (
                <RowComponent
                  title={item.title}
                  extract={item.extract}
                  videoLink={item.videoLink}
                  introduction={item.introduction}
                  explanation={item.explanation}
                />
              );
            })
          }
        </div>
      </main>
    </div>
  );
}

export default Home
